/*
*   Copyright (C) 2007
*   Chair of Process Control Engineering,
*   D-52056 Aachen, Germany.
*   All rights reserved.
*
*
*   This file is part of the ACPLT/OV Package 
*   Licensed under the Apache License, Version 2.0 (the "License");
*   you may not use this file except in compliance with the License.
*   You may obtain a copy of the License at
*
*       http://www.apache.org/licenses/LICENSE-2.0
*
*   Unless required by applicable law or agreed to in writing, software
*   distributed under the License is distributed on an "AS IS" BASIS,
*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*   See the License for the specific language governing permissions and
*   limitations under the License.
*
*/
/***********************************************************************
*
*	File
*	-----
*	kbuslib.ovm
*
*	Autoren:
*	--------
*	LE						Lars Evertz <l.evertz@plt.rwth-aachen.de>
*
*	CVS:
*	----
*	$Revision: 
*	$Date: 
*
*	Historie:
*	--------
*	07th-February-2011	LE
*		-	file created
*	
***********************************************************************/


#include "fb.ovm"


LIBRARY kbuslib

	VERSION   = "1.0";
	AUTHOR    = "Lars Evertz";
	COPYRIGHT = "Copyright (C) 2011, ACPLT";
	COMMENT   = "kbuslib";

	CLASS BusManager : CLASS fb/functionblock
		COMMENT = "Baseclass for Bus Managers";
		VARIABLES
			nrAI 	:	UINT	FLAGS = "o"
				COMMENT = "Number of analog inputs"
				INITIALVALUE = 0;
			nrAO	:	UINT	FLAGS = "o"
				COMMENT = "Number of analog outputs"
				INITIALVALUE = 0;
			nrDI	:	UINT	FLAGS = "o"
				COMMENT = "Number of digital inputs"
				INITIALVALUE = 0;
			nrDO	:	UINT	FLAGS = "o"
				COMMENT = "Number of digital outputs"
				INITIALVALUE = 0;
			nrSP	:	UINT	FLAGS = "o"
				COMMENT = "Number of specialized clamps"
				INITIALVALUE = 0;
			LastRead	:	TIME	FLAGS = "o"
				COMMENT = "Time of Last successfull read of ProcessImage";
			LastWrite	:	TIME	FLAGS = "o"
				COMMENT = "Time of Last successfull write of ProcessImage";	
			Error	:	BOOL	FLAGS = "o"
				COMMENT = "Error state (TRUE = Good)"
				INITIALVALUE = TRUE;
			ErrorCode	:	INT	FLAGS = "o"
				COMMENT = "Error Code"
				INITIALVALUE = 0;
			ErrorString	:	STRING	FLAGS = "o"
				COMMENT = "Textual Error Message";
			autodetect	:	BOOL	FLAGS = "p"
				COMMENT = "Autodetect mode on"
				INITIALVALUE = FALSE;
		END_VARIABLES;
		OPERATIONS
			checkinit	:	C_FUNCTION	<OV_FNC_CHECKINIT>;
			typemethod	:	C_FUNCTION	<FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
		
	END_CLASS;
	
	
	CLASS Clamp	:	CLASS fb/functionblock
		COMMENT = "Baseclass for Clamps";
		VARIABLES
			ByteAddress	:	UINT	HAS_SET_ACCESSOR
				FLAGS = "i"
				COMMENT = "Specifies Address in Bus"
				INITIALVALUE = 0;
			BitOffset	:	UINT	HAS_SET_ACCESSOR
				FLAGS = "i"
				COMMENT = "Bit-Offset. Only used by digital clamps. Otherweise 0"
				INITIALVALUE = 0;
			ByteWidth	:	UINT	HAS_SET_ACCESSOR
				FLAGS = "i"
				COMMENT = "Set only for specialized Clamps. Otherwise determined automatic."
				INITIALVALUE = 0;
			Enabled	:	BOOL
				FLAGS = "i"
				COMMENT = "Clamp enabled"
				INITIALVALUE = FALSE;
			Error	:	BOOL	FLAGS = "o"
				COMMENT = "Error state (TRUE = Good)"
				INITIALVALUE = TRUE;
			ErrorCode	:	INT	FLAGS = "o"
				COMMENT = "Error Code"
				INITIALVALUE = 0;
			ErrorString	:	STRING	FLAGS = "o"
				COMMENT = "Textual Error Message";
		END_VARIABLES;
		OPERATIONS
			startup	:	C_FUNCTION	<OV_FNC_STARTUP>;
			typemethod	:	C_FUNCTION	<FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	
	CLASS AnalogIN	:	CLASS kbuslib/Clamp
		IS_INSTANTIABLE;
		COMMENT = "Analog input clamp";
		VARIABLES
			TimeStamp	:	TIME
				FLAGS = "o"
				COMMENT = "Last sync with ProcessImage.";
			Value	:	SINGLE	FLAGS = "o"
				COMMENT = "Analog value"
				INITIALVALUE = 0.0;
			ValuePV	:	SINGLE_PV FLAGS = "o"
				COMMENT = "Analog Value with state and Timestamp";
		END_VARIABLES;
		OPERATIONS
			startup	:	C_FUNCTION	<OV_FNC_STARTUP>;
			typemethod	:	C_FUNCTION	<FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;	
	
	
	CLASS AnalogOUT	:	CLASS kbuslib/Clamp
		IS_INSTANTIABLE;
		COMMENT = "Analog output clamp";
		VARIABLES
			Value	:	SINGLE	HAS_SET_ACCESSOR
				FLAGS = "i"
				COMMENT = "Analog value"
				INITIALVALUE = 0.0;
			ReadBackOnly	:	BOOL	FLAGS = "i"
				COMMENT = "TRUE = Do not change Output"
				INITIALVALUE = FALSE;
			RBValue	:	SINGLE FLAGS = "o"
				COMMENT = "Read Back Value"
				INITIALVALUE = 0.0;
		END_VARIABLES;
		OPERATIONS
			startup	:	C_FUNCTION	<OV_FNC_STARTUP>;
			typemethod	:	C_FUNCTION	<FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;	
	
	
	CLASS DigitalIN	:	CLASS kbuslib/Clamp
		IS_INSTANTIABLE;
		COMMENT = "Digital input clamp";
		VARIABLES
			Value	:	BOOL	FLAGS = "o"
				COMMENT = "Digital value"
				INITIALVALUE = FALSE;
			ValuePV	:	BOOL_PV	FLAGS = "o"
				COMMENT = "Digital Value with state and Timestamp";
			TimeStamp	:	TIME
				FLAGS = "o"
				COMMENT = "Last sync with ProcessImage.";
		END_VARIABLES;
		OPERATIONS
			startup	:	C_FUNCTION	<OV_FNC_STARTUP>;
			typemethod	:	C_FUNCTION	<FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;	
	
	
	CLASS DigitalOUT	:	CLASS kbuslib/Clamp
		IS_INSTANTIABLE;
		COMMENT = "Digital output clamp";
		VARIABLES
			Value	:	BOOL	FLAGS = "i"
			COMMENT = "Digital value"
			INITIALVALUE = FALSE;
		ReadBackOnly	:	BOOL	FLAGS = "i"
			COMMENT = "TRUE = Do not change Output"
			INITIALVALUE = FALSE;
		RBValue	:	BOOL	FLAGS = "o"
			COMMENT = "Read Back Value"
			INITIALVALUE = FALSE;
		END_VARIABLES;
		OPERATIONS
			startup	:	C_FUNCTION	<OV_FNC_STARTUP>;
			typemethod	:	C_FUNCTION	<FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;	
	
	CLASS SpecialIN	:	CLASS kbuslib/Clamp
		IS_INSTANTIABLE;
		COMMENT = "Not Standart IN-Clamp";
		VARIABLES
		Value	:	ANY	FLAGS = "o"
			COMMENT = "Value read from bus";
		TimeStamp	:	TIME
				FLAGS = "o"
				COMMENT = "Last sync with ProcessImage.";
		END_VARIABLES;
		OPERATIONS
			startup	:	C_FUNCTION	<OV_FNC_STARTUP>;
			shutdown	:	C_FUNCTION	<OV_FNC_SHUTDOWN>;
			typemethod	:	C_FUNCTION	<FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;

	CLASS SpecialOUT	:	CLASS kbuslib/Clamp
		IS_INSTANTIABLE;
		COMMENT = "Not Standart OUT-Clamp";
		VARIABLES
		Value	:	ANY	HAS_SET_ACCESSOR
			FLAGS = "i"
			COMMENT = "Value written to bus";
		RbValue		:	ANY	FLAGS = "o"
			COMMENT = "ReadBack Value";
		ReadBackOnly	:	BOOL	FLAGS = "i"
			COMMENT = "Read Back Value from image only";
		END_VARIABLES;
		OPERATIONS
			startup	:	C_FUNCTION	<OV_FNC_STARTUP>;
			shutdown	:	C_FUNCTION	<OV_FNC_SHUTDOWN>;
			typemethod	:	C_FUNCTION	<FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	
	CLASS HARTAnalogIN	:	CLASS kbuslib/AnalogIN
		IS_INSTANTIABLE;
		COMMENT = "Analog input clamp with HART";
		VARIABLES
			channel	: UINT
				FLAGS = "i"
				COMMENT = "channel for Mailbox";
		END_VARIABLES;
	END_CLASS;

	CLASS MailBox	:	CLASS kbuslib/Clamp
		IS_INSTANTIABLE;
		COMMENT = "kbus Messagebox";
		VARIABLES
				
			busy		:	BOOL HAS_SET_ACCESSOR
				FLAGS = "i"
				COMMENT = "Messagebox in use";
			queue[]		: STRING
				HAS_GET_ACCESSOR
				IS_DERIVED
				FLAGS = "o"
				COMMENT = "list of waiting blocks";
			lastFree	: TIME
				FLAGS = "o"
				COMMENT = "time of the last free";
			queueTimeout	: TIME_SPAN
				FLAGS = "i"
				COMMENT = "timeout for queue elements to avoid deadlocks"
				INITIALVALUE = 00:00:01.500000;
			slot		: UINT
				FLAGS = "i"
				COMMENT = "slot of i/o card";
			channel		: UINT
				FLAGS = "i"
				COMMENT = "Channel to use"
				INITIALVALUE = 0;
			
			state		: UINT
				FLAGS = "o"
				COMMENT = "state of mailbox";
			
			readPos		: UINT
				FLAGS = "o";
			writePos	: UINT
				FLAGS = "o";
				
			ByteAddressOut : UINT	HAS_SET_ACCESSOR
				FLAGS = "i"
				COMMENT = "Specifies Address in Bus for Output"
				INITIALVALUE = 0;
			
			occupier	: C_TYPE<OV_QUEUE>;
			
			StatusByte	:	C_TYPE <OV_BYTE>; // internal toggle bit
			
			readBuffer	:	C_TYPE <OV_BYTE_VEC>;
			writeBuffer	:	C_TYPE <OV_BYTE_VEC>;
		END_VARIABLES;
		OPERATIONS
			startup		: C_FUNCTION <OV_FNC_STARTUP>;
			shutdown	: C_FUNCTION <OV_FNC_SHUTDOWN>;
			readwrite	: C_FUNCTION <KBUSLIB_FNC_READWRITE>;
			occupy		: C_FUNCTION <KBUSLIB_FNC_OCCUPYMAILBOX>;
			free		: C_FUNCTION <KBUSLIB_FNC_FREEMAILBOX>;
		END_OPERATIONS;
	END_CLASS;

 
ASSOCIATION mailBoxConnection : ONE_TO_MANY
	PARENT mailBox	: CLASS kbuslib/MailBox;
	CHILD clamps	: CLASS kbuslib/HARTAnalogIN;
END_ASSOCIATION;

END_LIBRARY;
