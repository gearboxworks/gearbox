#include "ov.ovm"
#include "fb.ovm"
#include "opcua.ovm"

LIBRARY opcuaSubscription
	VERSION   = "V0.1 (23-01-2018)";
	AUTHOR    = "Christian v. Trotha";
	COPYRIGHT = "";
	COMMENT   = "Client for OPC UA subscription";
	
	/**
		Documentation of DataArchiver.
		@note Javadoc syntax is allowed here.
		@attention Changes in this file will only generate new code in ./source/sourcetemplates/. Code in ./source/ is not overwritten. 
	*/
	CLASS subscriptionClient : CLASS fb/functionblock
		IS_INSTANTIABLE;
		VARIABLES
			/* */
			run : BOOL HAS_ACCESSORS FLAGS = "i" COMMENT = "Command to start execution of subscribtion" INITIALVALUE = FALSE;
			reset : BOOL HAS_ACCESSORS FLAGS = "i" COMMENT = "Reset command for connection" INITIALVALUE = FALSE; 
			
			NodeIDIdentifier[] : STRING FLAGS = "n" COMMENT = "Identifier list for the nodes";
			NodeIDNSindex[] : UINT FLAGS = "n" COMMENT = "Namespace index list for the nodes";
			NodeIDIdType[] : UINT FLAGS = "n" COMMENT = "IdentifierType list for the nodes (supported is Numeric: 0, String: 1)"; // ,  2, GUID: 3, Opaque: 4 not supported so far
			
			/* state machine */
			state : UINT HAS_ACCESSORS FLAGS = "n" COMMENT = "Current state of the fb";
			stateName : STRING HAS_SET_ACCESSOR FLAGS = "o" COMMENT = "Current state of the fb" INITIALVALUE = "";
			
			/* error handling */
			errorMsg : STRING HAS_SET_ACCESSOR FLAGS = "o";
			retryAfter : TIME_SPAN FLAGS = "i" COMMENT = "time span [s] until connection retry";
			lastConnectionTry : TIME FLAGS = "o" COMMENT ="Time of last connection try";
			
			/* OPC UA inputs */
			SignIn : BOOL	FLAGS = "i" COMMENT="TRUE if username and password is necessary" INITIALVALUE= FALSE;
			serverEndpointUrl : STRING	HAS_SET_ACCESSOR FLAGS = "i" COMMENT="URL (for example opc.tcp://localhost:16664)" INITIALVALUE= "opc.tcp://localhost:16664";
			Username : STRING	FLAGS = "i" COMMENT="Username to sign in" INITIALVALUE= "";
			Password : STRING	FLAGS = "i" COMMENT="Password to sign in" INITIALVALUE= "";
						 
			/* handle thread variables */
			threadDataHndl : INT FLAGS = "n" INITIALVALUE = 0;

		END_VARIABLES;
		PARTS

		END_PARTS;
		OPERATIONS
			constructor : C_FUNCTION <OV_FNC_CONSTRUCTOR>;
			destructor :  C_FUNCTION <OV_FNC_DESTRUCTOR>;
			typemethod : C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	
	CLASS	Variable : CLASS fb/functionblock
		IS_INSTANTIABLE;
		COMMENT	=	"representing a variable (to be put in the containment of a get/setVar to get/set more than one variable on the same server)";
		VARIABLES
			NodeIDIdentifier : STRING HAS_ACCESSORS COMMENT =	"NodeID of variable" INITIALVALUE = "";
			NodeIDNSindex : UINT HAS_ACCESSORS FLAGS = "i" COMMENT = "Namespace index list for the nodes";
			NodeIDIdType : UINT HAS_ACCESSORS FLAGS = "i" COMMENT = "IdentifierType list for the nodes (supported is Numeric: 0 String: 1)"; // GUID: 3, Opaque: 4 not supported so far
			varValue : ANY HAS_ACCESSORS FLAGS = "o" COMMENT = "The Variable value";
			varRes : UINT HAS_ACCESSORS FLAGS ="o" COMMENT =	"Result of opc ua subscription" INITIALVALUE =	0;
			varTime : TIME HAS_ACCESSORS FLAGS = "o" COMMENT = "";
			varID : STRING	FLAGS = "i" COMMENT = "eCl@ss oder IEC 61360-CDD (optional)";
			order :	UINT HAS_ACCESSORS FLAGS = "n" COMMENT = "Place of variable in package" INITIALVALUE	=	0;		
		END_VARIABLES;
		OPERATIONS
			constructor : C_FUNCTION <OV_FNC_CONSTRUCTOR>;
			destructor :  C_FUNCTION <OV_FNC_DESTRUCTOR>;
			typemethod : C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	
	CLASS subscriptionSettings : CLASS ov/object
	IS_INSTANTIABLE;
	COMMENT = "settings for the subscription";
	VARIABLES
		requestedPublishingInterval : DOUBLE FLAGS = "i" COMMENT = "" INITIALVALUE = 0.0;
		requestedLifetimeCount : INT FLAGS = "i" COMMENT = "" INITIALVALUE = 30;
		requestedMaxKeepAliveCount : INT FLAGS = "i" COMMENT = "" INITIALVALUE = 10;
		maxNotificationsPerPublish : INT FLAGS = "i" COMMENT = "" INITIALVALUE = 1024;
		publishingEnabled : BOOL FLAGS = "i" COMMENT = "" INITIALVALUE = TRUE;
		priority : INT FLAGS = "i" COMMENT = "" INITIALVALUE = 0;
	END_VARIABLES;
	OPERATIONS
		getaccess :	C_FUNCTION <OV_FNC_GETACCESS>;		/*	just to make all variables visible on KS	*/
	END_OPERATIONS;
	END_CLASS;

	CLASS	Factory	: CLASS ov/object
		IS_INSTANTIABLE;
		COMMENT = "Factory for DataArchiver";
		VARIABLES
			/* OPC UA inputs */
			serverEndpointUrl : STRING	HAS_SET_ACCESSOR FLAGS = "i" COMMENT="URL (for example opc.tcp://localhost:16664)" INITIALVALUE= "opc.tcp://localhost:16664";
			NodeIDIdentifier[] : STRING FLAGS = "i" COMMENT = "Identifier list for the nodes";
			NodeIDNSindex[] : UINT FLAGS = "i" COMMENT = "Namespace index list for the nodes";
			NodeIDIdType[] : UINT FLAGS = "i" COMMENT = "IdentifierType list for the nodes (supported is Numeric: 0, String: 1)"; // , Numeric: 2, GUID: 3, Opaque: 4 not supported so far
			
			/* csv file handling */
			name: STRING FLAGS = "i" COMMENT="Name for DataArchiver" INITIALVALUE = "subscription";
			placement: STRING FLAGS = "i" COMMENT="placement of DataArchiver" INITIALVALUE = "/TechUnits";
			create : BOOL HAS_SET_ACCESSOR FLAGS = "i" INITIALVALUE = FALSE;
		END_VARIABLES;
			OPERATIONS
			getaccess :	C_FUNCTION <OV_FNC_GETACCESS>;		/*	just to make all variables visible on KS	*/
		END_OPERATIONS;
	END_CLASS;
	
	ASSOCIATION subscriptionResult : ONE_TO_MANY
	PARENT subscriptionClient : CLASS opcuaSubscription/subscriptionClient;
	CHILD  Variable : CLASS opcuaSubscription/Variable;
	END_ASSOCIATION;
	
	ASSOCIATION settings : ONE_TO_MANY
	PARENT sbscriptionSettings : CLASS opcuaSubscription/subscriptionSettings; 
	CHILD subscriptionClient : CLASS opcuaSubscription/subscriptionClient;
	END_ASSOCIATION;
	
END_LIBRARY;
