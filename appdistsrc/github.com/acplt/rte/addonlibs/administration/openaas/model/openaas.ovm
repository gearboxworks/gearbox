#include "ov.ovm"
#include "fb.ovm"
#include "TCPbind.ovm"
#include "ksapi.ovm"
#include "identification.ovm"
#include "propertyValueStatement.ovm"
#include "lifeCycleEntry.ovm"
#include "MessageSys.ovm"
#include "openAASDiscoveryServer.ovm"
   
LIBRARY openaas
	VERSION   = "V0.1 (DD-Mon-YYYY)";
    AUTHOR    = "Torben Deppe";
    COPYRIGHT = "";
    COMMENT   = "";
     
	/**
		Documentation of aas.
		@note Javadoc syntax is allowed here.
		@attention Changes in this file will only generate new code in ./source/sourcetemplates/. Code in ./source/ is not overwritten. 
	*/   
        
    CLASS Folder : CLASS ov/domain
        IS_INSTANTIABLE;
        VARIABLES
        END_VARIABLES;
        OPERATIONS
        END_OPERATIONS;
    END_CLASS;
    
	
	CLASS SubModel : CLASS ov/domain
        IS_INSTANTIABLE;
        VARIABLES
            Revision            : UINT;
            Version             : UINT;
        END_VARIABLES;
        PARTS
        	ModelId             : CLASS identification/Identification;
        END_PARTS;
        
        OPERATIONS
            getaccess        :    C_FUNCTION    <OV_FNC_GETACCESS>;
        END_OPERATIONS;
    END_CLASS;

	CLASS AASComponentManager : CLASS fb/functionblock 
		IS_INSTANTIABLE;
		VARIABLES
			messageBoxSize   : UINT FLAGS = "n" COMMENT = "Determines the size of the messageBox, default size == 1";
            messageBoxIsFiFo : BOOL FLAGS = "n" COMMENT = "Determines if messages are handled FiFo (First in First out) or as Stack. Default is FiFo.";
            state            : UINT FLAGS = "o" COMMENT = "0:Waiting for AASID;1:Sending Register-Request and wait for answer;2:Process incoming messages;3:Forward Message,4:Sending Unregister-Request and wait for answer;5:Ready for Delete,6:Error";
            registered       : BOOL FLAGS = "o" COMMENT = "Determines if the ComponentManager is registered to the DiscoveryServer or not";
            messageTimeOut   : TIME_SPAN FLAGS = "n" COMMENT = "TimeOut in second for Register and Unregister Response until the next Request will be send";
            messageCount     : UINT FLAGS = "n" COMMENT = "TimeCount since the last Request" ;
            errorText        : STRING FLAGS = "o" COMMENT = "Error description" INITIALVALUE = "";
            reset            : BOOL HAS_SET_ACCESSOR FLAGS = "i" COMMENT = "Reset to state 0";
            receiverForMessageForwardedIdString : STRING INITIALVALUE = "";
            receiverForMessageForwardedIdType : UINT;
            senderForMessageForwardedIdString : STRING INITIALVALUE = "";
            senderForMessageForwardedIdType : UINT;
            MsgIdForMessageForwarded : STRING FLAGS = "n" COMMENT = "Id of forwarded Message" INITIALVALUE = "";
            MsgIdForGetAASIdRequest  : STRING FLAGS = "n" COMMENT = "Id of getAASIdRequest Message" INITIALVALUE = "";
            // error details
            errorFlag           : BOOL FLAGS = "o" INITIALVALUE = FALSE;
            errorMessage        : STRING FLAGS = "o" INITIALVALUE = "";
            
            // security details 
            certificateDS       : STRING FLAGS = "o" INITIALVALUE = "";
            securityKey         : STRING FLAGS = "o" INITIALVALUE = "";
		END_VARIABLES;
		PARTS
			INBOX  : CLASS MessageSys/inbox;
			OUTBOX : CLASS MessageSys/inbox;  
		END_PARTS;
		OPERATIONS
            getaccess   : C_FUNCTION <OV_FNC_GETACCESS>;
            constructor : C_FUNCTION <OV_FNC_CONSTRUCTOR>;
            destructor : C_FUNCTION <OV_FNC_DESTRUCTOR>;
            typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;
            sendMessage : C_FUNCTION <UA_FNC_SENDAASMESSAGEINSYSTEM>;
		END_OPERATIONS;
	END_CLASS;
	
	CLASS aas : CLASS ov/domain
		IS_INSTANTIABLE;
		VARIABLES   
		END_VARIABLES;
		PARTS 
			Header           : CLASS openaas/Folder;
			Body             : CLASS openaas/Folder;
			AASID           : CLASS identification/Identification;
			AssetID         : CLASS identification/Identification;
			ComponentManager : CLASS openaas/AASComponentManager;
		END_PARTS;
		OPERATIONS
			getaccess        :    C_FUNCTION    <OV_FNC_GETACCESS>;
		END_OPERATIONS;
	END_CLASS; 

    CLASS InterfaceDiscoveryServer    :    CLASS ov/object
    	IS_INSTANTIABLE;        
    VARIABLES
        IPAddressServer                 : STRING    COMMENT = "IP address of this server" INITIALVALUE    =   "127.0.0.1";
        IPAddressAASDiscoveryServer     : STRING    COMMENT = "IP address of the AASDiscoveryServer" INITIALVALUE    =   "127.0.0.1";
        ManagerNameAASDiscoveryServer   : STRING    COMMENT = "Manager Name of the AASDiscoveryServer" INITIALVALUE    =   "MANAGER";
        PathToAASDiscoveryServer        : STRING    COMMENT = "Path to the AASDiscoveryServer" INITIALVALUE    =   "/TechUnits/DiscoveryServer";
        OPCUANamespaceIndex             : UINT      COMMENT = "opcua NamespaceIndex of the components";
    END_VARIABLES;
    OPERATIONS        
    	constructor : C_FUNCTION <OV_FNC_CONSTRUCTOR>;
        destructor : C_FUNCTION <OV_FNC_DESTRUCTOR>;
        getaccess        :    C_FUNCTION    <OV_FNC_GETACCESS>;
    END_OPERATIONS;    
    END_CLASS;
    
    CLASS AASConvertListType : CLASS ov/object
        IS_INSTANTIABLE;
        VARIABLES
        	AASIdString : STRING INITIALVALUE    =   "";
            AASIdType   : UINT;
            AASPath     : STRING INITIALVALUE    =   ""; 
        END_VARIABLES;
        OPERATIONS
        	getaccess        :    C_FUNCTION    <OV_FNC_GETACCESS>;
        END_OPERATIONS;
    END_CLASS;     
    
    CLASS modelmanager    :    CLASS ov/domain
        IS_INSTANTIABLE;
        COMMENT    =    "Implementations of model functions to act like a factory";
    VARIABLES 
    	AASIdString                     : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
    	AASIdType                       : UINT HAS_SET_ACCESSOR;
    	AASName                         : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
    	AASAssetIdString                : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        AASAssetIdType                  : UINT HAS_SET_ACCESSOR;    	
        AASStatus                       : UINT; 
    	AASCreate                       : BOOL      HAS_SET_ACCESSOR FLAGS = "i" COMMENT = "Create an AAS";
    	AASDelete                       : BOOL      HAS_SET_ACCESSOR FLAGS = "i" COMMENT = "Delete an AAS";   
    	
    	SMAASIdString                   : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        SMAASIdType                     : UINT HAS_SET_ACCESSOR;
    	SMParentIdString                : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        SMParentIdType                  : UINT HAS_SET_ACCESSOR;
    	SMModelIdString                 : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        SMModelIdType                   : UINT HAS_SET_ACCESSOR;
        SMName                          : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        SMRevision                      : UINT HAS_SET_ACCESSOR;
        SMVersion                       : UINT HAS_SET_ACCESSOR;
        SMIdString                      : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        SMIdType                        : UINT HAS_SET_ACCESSOR;
        SMStatus                        : UINT; 
        SMCreate                        : BOOL      HAS_SET_ACCESSOR FLAGS = "i" COMMENT = "Create an SubModel";
        SMDelete                        : BOOL      HAS_SET_ACCESSOR FLAGS = "i" COMMENT = "Delete an SubModel";   
         
        PVSLAASIdString                 : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        PVSLAASIdType                   : UINT HAS_SET_ACCESSOR;
        PVSLParentIdString              : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        PVSLParentIdType                : UINT HAS_SET_ACCESSOR;        
        PVSLName                        : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        PVSLMask                        : UINT HAS_SET_ACCESSOR     COMMENT = "A bit mask that indicates which fields are present in the stream. The mask has following bits: 0x01:CarrierID;0x02:ExpressionLogic;0x04:ExpressionSemantic;0x08:PropertyID;0x10:View;0x20:Visibility";
        PVSLCarrierIdString             : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        PVSLCarrierIdType               : UINT HAS_SET_ACCESSOR;
        PVSLExpressionLogic             : INT HAS_SET_ACCESSOR     COMMENT = "0:GREATER_THAN,1:GREATER_EQUAL,2:EQUAL,3:NOT_EQUAL,4:LESS_EQUAL,5:LESS_THAN";
        PVSLExpressionSemantic          : INT HAS_SET_ACCESSOR     COMMENT = "0:ASSURANCE,1:SETTING,2:MEASUREMENT,,3:REQUIREMENT";
        PVSLPropertyIdString            : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        PVSLPropertyIdType              : UINT HAS_SET_ACCESSOR;
        PVSLView                        : INT HAS_SET_ACCESSOR     COMMENT = "0:BUSINESS,1:CONSTRUCTION,2:POWER,3:FUNCTIONAL,4:LOCATION,5:SECURTIY,6:NETWORK,7:LIFECYCLE,8:HUMAN";
        PVSLVisibility                  : INT HAS_SET_ACCESSOR     COMMENT = "0:PRIVATE,1:CONTRACT,2:PUBLIC";
        PVSLIdString                    : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        PVSLIdType                      : UINT HAS_SET_ACCESSOR;
        PVSLStatus                      : UINT; 
        PVSLCreate                      : BOOL     HAS_SET_ACCESSOR FLAGS = "i" COMMENT = "Create a PVSL";
        PVSLDelete                      : BOOL     HAS_SET_ACCESSOR FLAGS = "i" COMMENT = "Delete a PVSL"; 
        
        PVSAASIdString                  : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        PVSAASIdType                    : UINT HAS_SET_ACCESSOR;
        PVSListIdString                 : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        PVSListIdType                   : UINT HAS_SET_ACCESSOR;        
        PVSName                         : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        PVSValue                        : ANY HAS_SET_ACCESSOR;
        PVSMask                         : UINT HAS_SET_ACCESSOR     COMMENT = "A bit mask that indicates which fields are present in the stream. The mask has the following bits: 0x01:CarrierID; 0x02:ExpressionLogic; 0x04:ExpressionSemantic; 0x08:PropertyID; 0x10:View; 0x20:Visibility";
        PVSCarrierIdString              : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        PVSCarrierIdType                : UINT HAS_SET_ACCESSOR;
        PVSExpressionLogic              : INT HAS_SET_ACCESSOR     COMMENT = "0:GREATER_THAN,1:GREATER_EQUAL,2:EQUAL,3:NOT_EQUAL,4:LESS_EQUAL,5:LESS_THAN";
        PVSExpressionSemantic           : INT HAS_SET_ACCESSOR     COMMENT = "0:ASSURANCE,1:SETTING,2:MEASUREMENT,,3:REQUIREMENT";
        PVSPropertyIdString             : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        PVSPropertyIdType               : UINT HAS_SET_ACCESSOR;
        PVSView                         : INT HAS_SET_ACCESSOR     COMMENT = "0:BUSINESS,1:CONSTRUCTION,2:POWER,3:FUNCTIONAL,4:LOCATION,5:SECURTIY,6:NETWORK,7:LIFECYCLE,8:HUMAN";
        PVSVisibility                   : INT HAS_SET_ACCESSOR     COMMENT = "0:PRIVATE,1:CONTRACT,2:PUBLIC";
        PVSIdString                     : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        PVSIdType                       : UINT HAS_SET_ACCESSOR;
        PVSStatus                       : UINT;  
        PVSCreate                       : BOOL     HAS_SET_ACCESSOR FLAGS = "i" COMMENT = "Create a PVS";
        PVSDelete                       : BOOL     HAS_SET_ACCESSOR FLAGS = "i" COMMENT = "Delete a PVS";      
	                   
	    Status                          : UINT; 
	    ListSize                        : UINT;
	    ListCount                       : UINT;           
    END_VARIABLES;
    OPERATIONS
        createAAS  : C_FUNCTION <UA_FNC_CREATEAAS>;
        deleteAAS  : C_FUNCTION <UA_FNC_DELETEAAS>;
        createSubModel   : C_FUNCTION <UA_FNC_CREATESUBMODEL>;
        deleteSubModel   : C_FUNCTION <UA_FNC_DELETESUBMODEL>;
        createPVSL : C_FUNCTION <UA_FNC_CREATEPVSL>;
        deletePVSL : C_FUNCTION <UA_FNC_DELETEPVSL>;
        createPVS  : C_FUNCTION <UA_FNC_CREATEPVS>;
        deletePVS  : C_FUNCTION <UA_FNC_DELETEPVS>;
        getPVS     : C_FUNCTION <UA_FNC_GETPVS>;
        setPVS     : C_FUNCTION <UA_FNC_SETPVS>;
        getCoreData : C_FUNCTION <UA_FNC_GETCOREDATA>;
        //triggerGetCoreData : C_FUNCTION <UA_FNC_TRIGGERGETCOREDATA>;        
        ovresultToAASStatusCode : C_FUNCTION <UA_FNC_OVRESULTTOAASSTATUSCODE>;
        AASConvertListGet : C_FUNCTION <OPENAAS_FNC_AASCONVERTLISTGET>;
        AASConvertListAdd : C_FUNCTION <OPENAAS_FNC_AASCONVERTLISTADD>;
        AASConvertListDelete : C_FUNCTION <OPENAAS_FNC_AASCONVERTLISTDELETE>;       
        
        getaccess        :    C_FUNCTION    <OV_FNC_GETACCESS>;
        constructor : C_FUNCTION <OV_FNC_CONSTRUCTOR>;
    END_OPERATIONS;    
    END_CLASS;    
 
    CLASS simpleMessageCreator : CLASS fb/functionblock        
        IS_INSTANTIABLE;        
        VARIABLES       
            message : STRING FLAGS="i" INITIALVALUE ="";        
            targetPath : STRING FLAGS="i" INITIALVALUE ="/TechUnits/openAAS/Motor_M23.Body/ComponentManager.INBOX";     
        END_VARIABLES;      
          OPERATIONS        
            typemethod : C_FUNCTION <FB_FNC_TYPEMETHOD>;        
          END_OPERATIONS;       
    END_CLASS;
 
END_LIBRARY;
