/*
*   $Id: example.ovm,v 1.9 2000-06-20 06:50:32 dirk Exp $
*
*   Copyright (C) 1998
*   Lehrstuhl fuer Prozessleittechnik,
*   D-52056 Aachen, Germany.
*   All rights reserved.
*
*   Author: Dirk Meyer <dirk@plt.rwth-aachen.de>
*
*   This file is part of the ACPLT/OV Package 
*   
*   Licensed under the Apache License, Version 2.0 (the "License");
*   you may not use this file except in compliance with the License.
*   You may obtain a copy of the License at
*
*       http://www.apache.org/licenses/LICENSE-2.0
*
*   Unless required by applicable law or agreed to in writing, software
*   distributed under the License is distributed on an "AS IS" BASIS,
*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*   See the License for the specific language governing permissions and
*   limitations under the License.
*

*/
/*
*	History:
*	--------
*	04-May-1999 Dirk Meyer <dirk@plt.rwth-aachen.de>: File created.
*/

#include "ov.ovm"

LIBRARY example
	VERSION = "1.0";
	AUTHOR = "Dirk Meyer";
	COPYRIGHT = "Copyright (C) 1998, 1999 PLT, RWTH Aachen";
	COMMENT = "ACPLT/OV Example Library";

	CLASS getvarclient : CLASS ov/object
		IS_INSTANTIABLE;
		IS_FINAL;
		COMMENT = "ACPLT/KS client sending GetVar requests";
		VARIABLES
			host   : STRING HAS_ACCESSORS
				COMMENT = "name of the host where the ACPLT/KS server lives";
			server : STRING HAS_ACCESSORS
				COMMENT = "name of the ACPLT/KS server";
			path   : STRING HAS_ACCESSORS
				COMMENT = "variable path";
			pconn  : C_TYPE <OV_KSCLIENT_CONNECTION_PTR>;
			psvc   : C_TYPE <OV_KSCLIENT_SERVICE_PTR>;
		END_VARIABLES;
		OPERATIONS
			startup : C_FUNCTION <OV_FNC_STARTUP>;
			shutdown : C_FUNCTION <OV_FNC_SHUTDOWN>;
		END_OPERATIONS;
	END_CLASS;

	CLASS fnc : CLASS ov/object
		IS_INSTANTIABLE;
		COMMENT = "function evaluation class";
		VARIABLES
			expression : STRING HAS_ACCESSORS COMMENT = "mathematical expression";
			in1 : DOUBLE HAS_ACCESSORS COMMENT = "1st input";
			in2 : DOUBLE HAS_ACCESSORS COMMENT = "2nd input";
			out : DOUBLE HAS_GET_ACCESSOR IS_DERIVED COMMENT = "output";
			pexpr : C_TYPE <OV_EXPRESSION_PTR>;
		END_VARIABLES;
		OPERATIONS
			startup : C_FUNCTION <OV_FNC_STARTUP>;
			shutdown : C_FUNCTION <OV_FNC_SHUTDOWN>;
		END_OPERATIONS;
	END_CLASS;

	CLASS testclass : CLASS ov/domain
		IS_INSTANTIABLE;
		COMMENT = "test class";
		VARIABLES
			Single : SINGLE HAS_ACCESSORS
				UNIT = "m/s" COMMENT = "single precision floating point value";
			String : STRING HAS_ACCESSORS
				COMMENT = "string value";
			Time : TIME HAS_ACCESSORS IS_STATIC
				UNIT = "UTC" COMMENT="static time variable";
			IntPV : INT_PV HAS_ACCESSORS
				UNIT = "ticks" COMMENT = "integer process value";
			UIntVec[] : UINT HAS_ACCESSORS
				COMMENT = "dynamic unsigned integer vector value";
			StringVec[] : STRING IS_DERIVED HAS_ACCESSORS
				COMMENT = "string vector value";
			AnyVariable : ANY HAS_ACCESSORS
				COMMENT = "variable of any type";
		END_VARIABLES;
	END_CLASS;

	ASSOCIATION testassoc : MANY_TO_MANY
		PARENT MyParent : CLASS example/testclass
			COMMENT = "link to my parent";
		CHILD  MyChildren : CLASS example/testclass
			COMMENT = "link to my children";
	END_ASSOCIATION;
END_LIBRARY;

